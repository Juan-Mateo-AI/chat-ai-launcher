version: "3"

services:
  nats-server:
    image: nats:latest
    ports:
      - "8222:8222"
    deploy:
      resources:
        limits:
          memory: 50M

  client-gateway:
    build: ./client-gateway
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3000
      - NATS_SERVERS=nats://nats-server:4222
    deploy:
      resources:
        limits:
          memory: 500M

  auth-ms:
    build: ./auth-ms
    volumes:
      - ./auth-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3004
      - NATS_SERVERS=nats://nats-server:4222
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=${AUTH_DATABASE_URL}
    deploy:
      resources:
        limits:
          memory: 500M

  account-mw:
    build: ./account-mw
    volumes:
      - ./account-mw/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3003
      - NATS_SERVERS=nats://nats-server:4222
      - JWT_SECRET=${JWT_SECRET}
    deploy:
      resources:
        limits:
          memory: 500M

  ai-messaging-mw:
    build: ./ai-messaging-mw
    volumes:
      - ./ai-messaging-mw/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3005
      - NATS_SERVERS=nats://nats-server:4222
      - DATABASE_URL=${AI_MESSAGING_DATABASE_URL}
      - AI_SERVICE_API_HOST=${AI_SERVICE_API_HOST}
    deploy:
      resources:
        limits:
          memory: 500M

  users-db:
    container_name: users_database
    image: postgres:16.2
    restart: always
    volumes:
      - ./users-ms/postgres:/var/lib/postgresql/data
    ports:
      - 5436:5432
    environment:
      - POSTGRES_USER=${USERS_POSTGRES_USER}
      - POSTGRES_PASSWORD=${USERS_POSTGRES_PASSWORD}
      - POSTGRES_DB=${USERS_POSTGRES_DB}
    deploy:
      resources:
        limits:
          memory: 100M

  users-ms:
    depends_on:
      - users-db
    build: ./users-ms
    volumes:
      - ./users-ms/src:/usr/src/app/src
    command: npm run start:dev
    environment:
      - PORT=3002
      - DATABASE_URL=${USERS_DATABASE_URL}
      - NATS_SERVERS=nats://nats-server:4222
      - MAIL_HOST=${USERS_MAIL_HOST}
      - MAIL_USER=${USERS_MAIL_USER}
      - MAIL_PASSWORD=${USERS_MAIL_PASSWORD}
      - MAIL_FROM=${USERS_MAIL_FROM}
      - MAIL_TRANSPORT=${USERS_MAIL_TRANSPORT}
      - WEB_APP_URL=${USERS_WEB_APP_URL}
    deploy:
      resources:
        limits:
          memory: 500M

  ai-ms:
    build: ./ai-ms
    image: fastapi-python-app:latest
    networks:
      - default
    volumes:
      - ./ai-ms:/app # Mount current directory for live development
    ports:
      - "8000:8000" # Expose FastAPI app on port 8000
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    environment:
      - PORT=8000
      - NATS_SERVERS=nats://nats-server:4222
      - GEMINI_AI_KEY=${GEMINI_AI_KEY}
      - DB_URL=${DB_URL}
      - DB_NAME=${DB_NAME}
      - JWT_ACCESS_TOKEN_EXPIRES=${JWT_ACCESS_TOKEN_EXPIRES}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN}
      - JWT_ALGORITHM=${JWT_ALGORITHM}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_PUBLIC_KEY=${JWT_PUBLIC_KEY}
    deploy:
      resources:
        limits:
          memory: 300M
